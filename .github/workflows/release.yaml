# Copyright 2021 Iguazio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Release

on:
  release:
    types:
    - created

  # Create unstable release on push to main
  push:
    branches:
    - main

jobs:

  # Create a release on push to development
  release-preperation:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Delete previous unstable release
      if: github.event_name == 'push'
      uses: dev-drprasad/delete-tag-and-release@v0.1.3
      with:
        delete_release: true # default: false
        tag_name: unstable # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create new unstable release
      id: create_unstable_release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: unstable
        release_name: unstable
        body: |
          Latest unstable release
          - Git sha ${{ github.sha }}
          - Updated at ${{ github.event.head_commit.timestamp}}
        draft: false
        prerelease: false

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ release-preperation ]
    steps:
    - name: Dump github context
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Dump runner context
      run: echo "$RUNNER_CONTEXT"
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}

    - name: Dump github ref
      run: echo "$GITHUB_REF"

    - name: Extract ref info
      id: release_info
      run: |
        echo ::set-output name=REF_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=REF_TAG::${GITHUB_REF#refs/tags/}

    - name: Set DEMOS_DATASETS_VERSION to unstable
      if: github.event_name == 'push' && steps.release_info.outputs.REF_BRANCH == 'main'
      run: |
        echo "DEMOS_DATASETS_VERSION=unstable" >> $GITHUB_ENV

    - name: Set DEMOS_DATASETS_VERSION to release tag
      if: github.event_name == 'release'
      run: |
        echo "DEMOS_DATASETS_VERSION=${{ steps.release_info.outputs.REF_TAG }}" >> $GITHUB_ENV

    - uses: actions/checkout@v2

    - name: Build Release
      run: make build

    - name: Upload Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: datasets-*.tar.gz
        tag: ${{ env.DEMOS_DATASETS_VERSION }}
        overwrite: true
        file_glob: true
